{"version":3,"sources":["redux/action/productList.action.js","components/productList.js","components/demo.js","routes.js","components/test/test.component.js","queries/graphql.component.js","components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/search-box.component.js","components/monsters.component.js","App.js","reportWebVitals.js","redux/reducer/cardReducer.js","redux/reducer/listReducer.js","redux/reducer/fetchDataReducer.js","redux/reducer/movieAlphaReducer.js","redux/reducer/rootReducer.js","redux/saga/fetchDataSaga.js","redux/saga/RootSagas.js","redux/store/index.js","index.js","redux/action/cards.action.js","redux/action/data.action.js"],"names":["ADD_MOVIES","ADD_ALPHA","THUNK_DATA","SEND_REQUEST","SEND_REQUEST_SUCCESS","SEND_REQUEST_FAILURE","AddMovies","payload","type","LoadThunkData","console","log","connect","state","MovieAndAlphaReducer","sagaState","fetchDataReducer","AddAlpha","Middle","dispatch","fetchData","data","props","useState","renderCount","useRef","useCallback","useEffect","current","id","image","name","quantity","map","item","className","src","alt","movies","CardReducer","IncCardCount","DecCardCount","card1","cardCount","height","card2","onKeyPress","e","charCode","currentTarget","value","onClick","routes","path","exact","component","ProductList","Demo","persons","setPersons","fetch","then","response","json","users","person","gql","Card","monster","email","CardList","monsters","SearchBox","placeholder","handleChange","onChange","Monsters","searchField","setState","this","filteredMonsters","filter","toLowerCase","includes","style","marginLeft","target","Component","from","ErrorLink","HttpLink","App","Suspense","fallback","Routes","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","list","initialState","loading","user","error","alpha","thunkdata","RootReducer","combineReducers","action","cardActionName","push","ListReducer","actionName","pop","productActionName","types","asyncFetchRequest","watchFetchDataSaga","options","method","url","params","q","headers","call","axios","request","put","takeEvery","RootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","httpLink","createHttpLink","uri","cache","InMemoryCache","client","ApolloClient","link","ReactDOM","StrictMode","document","getElementById","INCREMENT_CARD_COUNT","ADD_TO_LIST","DELETE_FROM_LIST","AddToList","DeleteFromList"],"mappings":"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","file":"static/js/main.c432a50d.chunk.js","sourcesContent":["export const ADD_MOVIES = \"ADD_MOVIES\";\nexport const ADD_ALPHA = \"ADD_ALPHA\";\nexport const THUNK_DATA = \"THUNK_DATA\";\nexport const SEND_REQUEST = \"SEND_REQUEST\";\nexport const SEND_REQUEST_SUCCESS = \"SEND_REQUEST_SUCCESS\";\nexport const SEND_REQUEST_FAILURE = \"SEND_REQUEST_FAILURE\";\n\n\n\nexport const fetchData = (data) => {\n    return {\n        type: SEND_REQUEST,\n        payload: data\n    };\n};\n\nexport const fetchDataSuccess = (user) => {\n    return {\n        type: SEND_REQUEST_SUCCESS,\n        payload: user,\n    };\n\n};\n\nexport const fetchDataFailure = (error) => {\n    return {\n        type: SEND_REQUEST_FAILURE,\n        payload: {},\n        error: error\n    };\n\n};\n\n\n\n\nexport const AddMovies = (payload) => {\n    return {\n        type: ADD_MOVIES,\n        payload,\n    };\n};\n\nexport const AddAlpha = (payload) => {\n    return {\n        type: ADD_ALPHA,\n        payload\n    };\n};\n\n\nexport const Middle = () => {\n    console.log(\"iniside middle()\");\n    return dispatch => {\n        let j = \"Successfull Thunk\";\n        dispatch(LoadThunkData(j));\n    };\n};\n\nexport const LoadThunkData = (payload) => {\n    console.log(\"inside LoadThunkData()\");\n    return {\n        type: THUNK_DATA,\n        payload\n    };\n};","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AddMovies, AddAlpha, Middle, fetchData } from \"../redux/action/productList.action\";\nimport axios from \"axios\";\nimport \"../styles/productList.css\";\nimport Child from \"./child\";\n\n\nconst ProductList = (props) => {\n\n    const [counter, setCounter] = useState(0);\n\n    const renderCount = useRef(0);\n\n    const testfun = useCallback(\n        () => {\n\n            console.log(\"ola\");\n\n        },\n        [],\n    );\n\n    useEffect(() => {\n        renderCount.current = renderCount.current + 1;\n\n    });\n\n    const getData = async () => {\n        const options = {\n            method: 'GET',\n            url: 'https://imdb8.p.rapidapi.com/auto-complete',\n            params: { q: 'game of thr' },\n            headers: {\n                'x-rapidapi-key': '36da38bf24msh97feef7e400dd7fp165fcfjsnb1417d4c29fb',\n                'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n            }\n        };\n\n        try {\n            const movies = await axios.request(options);\n            props.AddMovies(movies.data.d);\n        } catch (err) {\n            console.error(\"ERR\", err);\n        }\n\n    };\n\n    const getAlpha = async () => {\n\n        const options = {\n            method: 'GET',\n            url: 'https://seeking-alpha.p.rapidapi.com/auto-complete',\n            params: { term: 'apple' },\n            headers: {\n                'x-rapidapi-key': '36da38bf24msh97feef7e400dd7fp165fcfjsnb1417d4c29fb',\n                'x-rapidapi-host': 'seeking-alpha.p.rapidapi.com'\n            }\n        };\n        try {\n            const alpha = await axios.request(options);\n\n            props.AddAlpha(alpha.data);\n\n        } catch (err) {\n            console.log(\"ERR\", err);\n        }\n    };\n\n    const graph = async () => {\n        // try {\n        //     const data = await axios.get(\"https://countries-274616.ew.r.appspot.com/\");\n\n        //     console.log(\"graph\", data);\n        // } catch (err) {\n        //     console.log(\"ERR\", err.message);\n        // }\n        try {\n            const data = await axios({\n                url: \"https://countries-274616.ew.r.appspot.com/\",\n                method: \"post\",\n                data: `{\n                    Country{\n                        name\n                        capital\n                    }\n                }`\n            });\n            console.log(\"graph\", data);\n        } catch (err) {\n            console.log(\"ERR\", err.message);\n        }\n\n\n    };\n\n    const saveDataLocal = () => {\n        // const data = \"Testing local storages concept.......\";\n        // localStorage.setItem(\"data1\", data);\n        // sessionStorage.setItem(\"data2\", data);\n        // console.log(\"Inside Funtion - localStorage: \", localStorage.getItem(\"data1\"));\n        // console.log(\"Inside Funtion -sessionStorage: \", sessionStorage.getItem(\"data2\"));\n        // setCounter(counter + 1);\n\n        props.fetchData(35);\n\n    };\n    const cart = [\n        { id: 1, image: \"https://cdn.mos.cms.futurecdn.net/e6hWKhmXszRLNSvPRHizZ5-1024-80.jpg.webp\", name: \"taxi\", quantity: 2 },\n        { id: 2, image: \"https://farm4.static.flickr.com/3143/2982595969_bbe67fc03b.jpg\", name: \"paste\", quantity: 5 },\n    ];\n    const cartRender = cart.map(item => {\n\n        return (\n            <div key={item.id}>\n\n                <img className=\"image\" src={item.image} alt=\"no image\" />\n                <h4 className=\"quantity\">Quantity: {item.quantity}</h4>\n                <h3 className=\"data\">{item.name}</h3>\n\n            </div>\n\n        );\n    });\n\n\n\n\n    // const card = props.state.movies.map(item => {\n    //     return (\n    //         <div key={item.id} className=\"card\">\n    //             <img src={item.i.imageUrl} height=\"300\" width=\"250\" />\n    //             <h4>{item.q}</h4>\n    //             <h2>{item.l}</h2>\n    //         </div>\n    //     );\n    // });\n\n    useEffect(() => {\n        // getData();\n        //getAlpha();\n        //graph();\n        // props.Middle();\n\n    }, []);\n    console.log(\"Movies\", props.state.movies);\n    // console.log(\"Alpha\", props.state.alpha);\n    // console.log(\"localStorage: \", localStorage.getItem(\"data1\"));\n    // console.log(\"sessionStorage: \", sessionStorage.getItem(\"data2\"));\n    // console.log(\"Total Renders: \", renderCount.current);\n    //console.log(\"Thunk data: \", props.state.thunkdata);\n    console.log(\"Saga\", props.sagaState);\n\n    return (\n        <div >\n            {/*<h1 className=\"card\" >ProductList</h1>\n            <h3 className=\"template\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Ab unde voluptate earum repellendus blanditiis praesentium debitis saepe, consequuntur quasi dolores.</h3>\n\n    <button onClick={() => saveDataLocal()}>Check Local Stoage Concept</button>*/}\n\n\n            {/* <div className=\"cart\">\n                {cartRender}\n</div>*/}\n\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    //console.log(\"State of ProductList\", state);\n    return {\n        state: state.MovieAndAlphaReducer,\n        sagaState: state.fetchDataReducer\n    };\n};\n\nexport default connect(mapStateToProps, { AddMovies, AddAlpha, Middle, fetchData })(ProductList);","import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IncCardCount, DecCardCount } from \"../redux/action/cards.action\";\nimport \"../styles/productList.css\";\nimport \"../styles/collectData.css\";\n\nconst Demo = (props) => {\n\n    const handleCardEnterKey = e => {\n        if (e.charCode == 13) {\n            props.IncCardCount(e.currentTarget.value);\n        }\n    };\n\n    const handleCardDelete = () => {\n        props.DecCardCount();\n    };\n\n\n    const image1 = \"https://cdn.mos.cms.futurecdn.net/e6hWKhmXszRLNSvPRHizZ5-1024-80.jpg.webp\";\n    const image2 = \"https://farm4.static.flickr.com/3143/2982595969_bbe67fc03b.jpg\";\n\n\n    const card1 = props.state.cardCount.map(item => {\n        return (\n            <div className=\"card\" key={item}>\n                <img src={image1} height=\"300px\" />\n                <h3>Wanda Vision</h3>\n\n            </div>\n        );\n    });\n\n    const card2 = props.state.cardCount.map(item => {\n        return (\n            <div className=\"card\" key={item}>\n                <img src={image2} height=\"300\" />\n                <h3>Lorem ipsum dolor sit amet consectetur adipisicing elit. Provident dicta recusandae nihil vel sit necessitatibus iusto sapiente, obcaecati fuga deleniti!</h3>\n\n            </div>\n        );\n    });\n\n\n    return (\n        <div>\n            <div className=\"data\">\n                <label>Add Card Count</label>\n                <input\n                    type=\"text\"\n                    onKeyPress={handleCardEnterKey}>\n                </input>\n                <button onClick={() => handleCardDelete()}>Delete Last Item</button>\n                <ul>NUMBERS IN LIST:\n        {props.state.cardCount.map(item => {\n                    return <li key={item}>{item}</li>;\n                })}\n                </ul>\n            </div>\n            {card1}\n            {card2}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(\"demo component\");\n    return {\n        state: state.CardReducer\n    };\n};\n\nexport default connect(mapStateToProps, { IncCardCount, DecCardCount })(Demo);","import React from \"react\";\nimport ProductList from \"./components/productList\";\n// //import Stock from \"./components/stock\";\nimport Demo from \"./components/demo\";\nimport Test from \"./components/test/test.component\";\n// const CollectData = React.lazy(() => import(\"./components/collectData\"));\n\n\n\n\nconst routes = [\n    { path: \"/\", exact: true, name: \"Product\", component: ProductList },\n    // { path: \"/data\", exact: true, name: \"Data\", component: CollectData },\n    // //{ path: \"/stock\", exact: true, name: \"Stock\", component: Stock },\n    { path: \"/demo\", exact: true, name: \"Demo\", component: Demo },\n    { path: \"/test\", exact: true, name: \"test\", component: Test },\n];\n\n\nexport default routes;","import { useState, useEffect } from \"react\";\nimport \"./test.styles.css\";\n\nconst Test = () => {\n    const [persons, setPersons] = useState([]);\n\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => setPersons(users));\n\n    }, []);\n    console.log(persons);\n    return (\n        <div >\n            {\n                persons.map(person => {\n                    return (\n                        <div key={person.id} className=\"mycard\">\n\n\n                            <img className=\"myimage\" src={`https://robohash.org/${person.id}?set=set2`} alt=\"No image\" />\n\n                            <h2 className=\"text\">{person.name}</h2>\n\n\n\n\n                        </div>\n                    );\n                })\n            }\n            <h1 className=\"mycard\">hello amigo</h1>\n            <h1 className=\"mycard\">bas rehnde</h1>\n            <h1>hello amigo</h1>\n\n        </div>\n    );\n};\n\n\n\nexport default (Test);","import React from \"react\";\n\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport Loading from \"./error\";\nimport ValidData from \"./validData\";\n\nconst GET_COLLECTIONS = gql`\n{\n    collections{\n        id\n        title\n        items{\n          id\n          name\n          price\n          imageUrl\n        }\n      }\n}\n`;\n\nconst Container = () => {\n    return (\n        <Query query={GET_COLLECTIONS}>\n            {({ loading, data }) => {\n                if (loading) return <Loading />;\n                return <ValidData data={data.collections} />;\n            }\n\n            }\n        </Query>\n    );\n};\n\nexport default Container;","import React from 'react';\nimport \"./card.styles.css\";\n\nexport const Card = props => {\n    return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\n            <h2>{props.monster.name}</h2>\n            <p>{props.monster.email}</p>\n        </div>\n\n    );\n\n};","import React from 'react';\nimport { Card } from \"../card/card.component\";\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => {\n\n    return <div className=\"card-list\">\n        {props.monsters.map(monster => {\n            return <Card key={monster.id} monster={monster} />;\n        })}\n    </div>;\n};","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n    return (\n        <input\n            className=\"search\"\n            type=\"search\"\n            placeholder={placeholder}\n            onChange={handleChange} />);\n\n};","import React, { Component } from 'react';\nimport { CardList } from \"./card-list/card-list.component\";\nimport { SearchBox } from \"./search-box/search-box.component\";\n\nclass Monsters extends Component {\n    constructor() {\n        super();\n        this.state = {\n            monsters: [],\n            searchField: \"\"\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => this.setState({ monsters: users }));\n    }\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter(monster => {\n            return monster.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n\n        return (\n            <div>\n                <h1 style={{ marginLeft: \"42%\" }}>Monsters Rolodex</h1>\n                <SearchBox\n                    placeholder=\"Search Monster\"\n                    handleChange={e => { this.setState({ searchField: e.target.value }); }}\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default Monsters;","import './App.css';\nimport React, { useRef, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Routes from \"./routes\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from, } from \"@apollo/client\";\nimport { ErrorLink, onError } from \"@apollo/client/link/error\";\nimport Container from \"./queries/graphql.component\";\nimport Monsters from \"./components/monsters.component\";\nimport Test from \"./components/test/test.component\";\nimport WaiAria from \"./components/wai-aria/wai-aria.component\";\nconst CollectData = React.lazy(() => import(\"./components/collectData\"));\n\nconst link = from([\n  ErrorLink,\n  new HttpLink()\n]);\n\n// const renderCount = useRef(0);\n// useEffect(() => {\n//   renderCount.current = renderCount.current + 1;\n\n// });\nfunction App() {\n  // console.log(\"Total Renders: \", renderCount.current);\n  return (\n\n    <React.Suspense fallback=\"Something is loading\">\n      <Monsters />\n      <Switch>\n        {Routes.map(item => {\n          return (\n            <Route\n              key={item.path}\n              exact\n              path={item.path}\n              name={item.name}\n              render={(props) => <item.component {...props} />}\n            />);\n        })}\n      </Switch>\n\n\n    </React.Suspense>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport * as cardActionName from \"../action/cards.action\";\n\nconst initState = {\n\n    cardCount: [],\n\n\n};\n\nexport const CardReducer = (state = initState, action) => {\n    console.log(\"inside rducer2\");\n\n    switch (action.type) {\n        case cardActionName.INCREMENT_CARD_COUNT:\n            state.cardCount.push(action.payload);\n            return { ...state };\n\n        default:\n            return { ...state };\n    }\n};","import * as actionName from \"../action/data.action\";\n\nconst initState = {\n    list: [],\n\n};\nexport const ListReducer = (state = initState, action) => {\n    console.log(\"inside reducer1\");\n    switch (action.type) {\n\n        case actionName.ADD_TO_LIST:\n\n            state.list.push(action.payload);\n            return { ...state };\n\n        case actionName.DELETE_FROM_LIST:\n            state.list.pop();\n            return { ...state };\n\n        default:\n            return { ...state };\n    }\n\n};","import * as types from \"../action/productList.action\";\n\nconst initialState = {\n    loading: false,\n    user: {},\n    error: {}\n};\n\nexport const fetchDataReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.SEND_REQUEST:\n            return {\n                ...state,\n                loading: true\n            };\n\n        case types.SEND_REQUEST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload,\n                error: {}\n\n            };\n        case types.SEND_REQUEST_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.error\n            };\n\n        default:\n            return {\n                ...state\n            };\n    }\n};","import * as productActionName from \"../action/productList.action\";\n\nconst initState = {\n\n    movies: [],\n    alpha: {},\n    thunkdata: \"NO data fetched\"\n\n};\n\nexport const MovieAndAlphaReducer = (state = initState, action) => {\n    console.log(\"inisde reducer3\");\n\n\n    switch (action.type) {\n        case productActionName.ADD_MOVIES:\n            state.movies = action.payload;\n            return { ...state };\n\n        case productActionName.ADD_ALPHA:\n            state.alpha = action.payload;\n\n            return { ...state };\n\n        case productActionName.THUNK_DATA:\n            console.log(\"inside reducer of thunk\");\n\n            state.thunkdata = action.payload;\n            return { ...state };\n\n        default:\n            return { ...state };\n    }\n};","import { combineReducers } from \"redux\";\nimport { CardReducer } from \"./cardReducer\";\nimport { ListReducer } from \"./listReducer\";\nimport { fetchDataReducer } from \"./fetchDataReducer\";\nimport { MovieAndAlphaReducer } from \"./movieAlphaReducer\";\n\n\nexport const RootReducer = combineReducers({ CardReducer, ListReducer, MovieAndAlphaReducer, fetchDataReducer });","import { takeEvery, call, put } from \"redux-saga/effects\";\nimport * as types from \"../action/productList.action\";\nimport axios from \"axios\";\n\nfunction* asyncFetchRequest(action) {\n    const options = {\n        method: 'GET',\n        url: 'https://imdb8.p.rapidapi.com/auto-complete',\n        params: { q: 'game of thr' },\n        headers: {\n            'x-rapidapi-key': '36da38bf24msh97feef7e400dd7fp165fcfjsnb1417d4c29fb',\n            'x-rapidapi-host': 'imdb8.p.rapidapi.com'\n        }\n    };\n\n    try {\n        const response = yield call(() => axios.request(options));\n        //console.log(\"response\", response);\n\n        //yield put(types.fetchDataSuccess(response));\n        yield put(types.AddMovies(response));\n\n\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport function* watchFetchDataSaga() {\n\n    yield takeEvery(types.SEND_REQUEST, asyncFetchRequest);\n\n}","import { take, call, all } from \"redux-saga/effects\";\n\n\nimport { watchFetchDataSaga } from \"./fetchDataSaga\";\n\nexport default function* RootSaga() {\n    console.log(\"RootSaga\");\n    yield all([\n        watchFetchDataSaga()\n    ]);\n}","// import { createStore, applyMiddleware } from \"redux\";\n// import logger from \"redux-logger\";\n// import { RootReducer } from \"../reducer/rootReducer\";\n// import thunk from \"redux-thunk\";\n\n\n// const middlewares = [logger, thunk];\n// export const store = createStore(RootReducer, applyMiddleware(...middlewares));\n\n/**Steps to use redux saga\n//Store section:\nimport createSaga from \"redux-saga\"\nconst saga  =  createSaga()\nconst middlewares = [saga]\nexport const store = createStore(RootReducer,applyMiddleware(...middlewares))\n\n//product.saga.js\n\nimport{takeEvery} from \"redux-saga/effects\"\ni\n\nexport function* fetchData(){\n\n}*/\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { RootReducer } from \"../reducer/rootReducer\";\nimport RootSaga from \"../saga/RootSagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(RootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(RootSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloClient, gql } from \"apollo-boost\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://crwn-clothing.com\"\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\n//Syntax to make queries to graphql Server\n// // client.query({\n// //   query: gql`\n// //   {\n// //     getCollectionsByTitle(title:\"hats\"){\n// //       title \n// //        items{\n// //          name\n// //        }\n// //      }\n// //   }\n// //   `\n// }).then(res => console.log(\"graphql\", res));\n\n//Syntax to make mutations to graphql server\n\nReactDOM.render(\n\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <React.StrictMode>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </React.StrictMode>\n    </Provider>\n  </ApolloProvider>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const INCREMENT_CARD_COUNT = \"INCREMENT_CARD_COUNT\";\nexport const DECREMENT_CARD_COUNT = \"DECREMENT_CARD_COUNT\";\n\n\nexport const IncCardCount = (payload) => {\n    return {\n        type: INCREMENT_CARD_COUNT,\n        payload\n    };\n};\n\nexport const DecCardCount = () => {\n    return {\n        type: DECREMENT_CARD_COUNT,\n\n    };\n};","export const ADD_TO_LIST = \"ADD_TO_LIST\";\nexport const DELETE_FROM_LIST = \"DELETE_FROM_LIST\";\n\nexport const AddToList = (payload) => {\n    return {\n        type: ADD_TO_LIST,\n        payload\n    };\n};\n\nexport const DeleteFromList = () => {\n    return {\n        type: DELETE_FROM_LIST,\n\n    };\n};"],"sourceRoot":""}